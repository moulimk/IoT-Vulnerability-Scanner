import subprocess
import re
import netifaces
from scanning_module.nmap_scanner import scan_for_open_ports, identify_vulnerable_ports

def get_router_ip():
    """
    Retrieves the IP address of the router (default gateway).
    """
    gateways = netifaces.gateways()
    default_gateway = gateways.get('default')
    if default_gateway:
        return default_gateway[netifaces.AF_INET][0]  # IPv4 default gateway
    else:
        return None

def check_vulnerable_ports_on_wifi():

    router_ip = get_router_ip()
    if not router_ip:
        return []

    open_ports = scan_for_open_ports(router_ip)
    vulnerable_ports = identify_vulnerable_ports(open_ports)
    
    return vulnerable_ports

def get_connected_wifi_details():
    """
    Retrieve details about the currently connected Wi-Fi network.
    
    Returns:
        str: Formatted string containing essential details of the connected Wi-Fi network.
    """
    try:
        result = subprocess.run(
            ["nmcli", "-t", "-f", "active,ssid,bssid,chan,rate,signal,security", "dev", "wifi"], 
            capture_output=True, 
            text=True
        )
        wifi_details = result.stdout.splitlines()
        
        for line in wifi_details:
            if line.startswith('yes'):
                return line
        return "Unable to retrieve Wi-Fi details."
    except Exception as e:
        return f"Error retrieving Wi-Fi details: {str(e)}"

def check_encryption(wifi_details):
    """
    Analyze the Wi-Fi security setting to determine if it's secure.
    
    Args:
        wifi_details (str): Raw details of the connected Wi-Fi network.
    
    Returns:
        tuple: A message about the security status and a boolean indicating if it's secure.
    """
    if 'WEP' in wifi_details:
        return "Your Wi-Fi is using outdated security (WEP). Upgrade to WPA2 or WPA3 for better protection.", False
    elif 'WPA2' in wifi_details or 'WPA3' in wifi_details:
        return "Your Wi-Fi is secured with WPA2 or WPA3. This is recommended.", True
    elif '--' in wifi_details or 'none' in wifi_details:
        return "No security detected! Your network is open and vulnerable.", False
    else:
        return "We couldnâ€™t identify the security level of your network. Please check your Wi-Fi settings to ensure you are using WPA2 or WPA3 for the best protection.", False

def scan_connected_devices():
    """
    Scan the network for connected devices using ARP.
    
    Returns:
        str: A list of devices connected to the Wi-Fi network.
    """
    try:
        result = subprocess.run(["arp", "-a"], capture_output=True, text=True)
        devices = result.stdout
        return devices
    except Exception as e:
        return f"Error scanning for connected devices: {str(e)}"

def audit_connected_devices(known_devices):
    """
    Identify unknown devices connected to the network.
    
    Args:
        known_devices (list): A list of known MAC addresses.
    
    Returns:
        list: A list of unknown devices connected to the network.
    """
    devices = scan_connected_devices()
    unknown_devices = []
    
    # Identify and list devices that are not recognized
    for line in devices.splitlines():
        mac_address = re.search(r'(([a-fA-F0-9]{2}[:-]){5}[a-fA-F0-9]{2})', line)
        if mac_address and mac_address.group(0) not in known_devices:
            unknown_devices.append(line)
    
    return unknown_devices

def security_tips(is_secure):
    """
    Provide security tips based on the Wi-Fi's encryption status.
    
    Args:
        is_secure (bool): Indicates if the Wi-Fi network is using secure encryption.
    
    Returns:
        list: A list of security tips.
    """
    if is_secure:
        return [
            "Your network uses a secure security setting. Here are some additional tips to enhance security:",
            "1. Change your Wi-Fi password regularly.",
            "2. Ensure that your router's firmware is up to date.",
            "3. Disable WPS (Wi-Fi Protected Setup) to prevent easy access.",
            "4. Use a strong, unique password for your router's admin interface."
        ]
    else:
        return [
            "Your network is not using a secure security setting. Here are some immediate steps you should take:",
            "1. Go to your Wi-Fi settings and ensure your network is set to use 'WPA2' or 'WPA3' for the best protection.",
            "2. If possible, avoid using open networks or networks with weak security.",
            "3. Use a strong, unique Wi-Fi password.",
            "4. Consider using a VPN for sensitive activities until your network is secure."
        ]
    