import sqlite3
import os

def initialize_database(db_path):
    if not os.path.exists(db_path):
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # Create the devices table with additional fields
        cursor.execute('''CREATE TABLE IF NOT EXISTS devices (
                            id INTEGER PRIMARY KEY AUTOINCREMENT,
                            ip_address TEXT,
                            mac_address TEXT,
                            manufacturer TEXT,
                            device_type TEXT,
                            os TEXT,
                            ports TEXT,
                            protocols TEXT,
                            services TEXT,
                            versions TEXT
                        );''')
        
        # Create the vulnerabilities table
        cursor.execute('''CREATE TABLE IF NOT EXISTS vulnerabilities (
                            id TEXT PRIMARY KEY,
                            device_type TEXT NOT NULL,
                            source_identifier TEXT,
                            published DATE,
                            last_modified DATE,
                            vuln_status TEXT,
                            description TEXT,
                            cvss_score REAL,
                            severity TEXT,
                            attack_vector TEXT,
                            attack_complexity TEXT,
                            privileges_required TEXT,
                            user_interaction TEXT,
                            scope TEXT,
                            confidentiality_impact TEXT,
                            integrity_impact TEXT,
                            availability_impact TEXT,
                            exploitability_score REAL,
                            impact_score REAL,
                            FOREIGN KEY (device_type) REFERENCES devices (device_type)
                        );''')
        
        conn.commit()
        conn.close()
        print("Database created successfully!")
    else:
        print("Database already exists.")


def insert_device(db_path, ip_address, mac_address, manufacturer, device_type, os, ports, protocols, services, versions):
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    cursor.execute('''INSERT INTO devices (ip_address, mac_address, manufacturer, device_type, os, ports, protocols, services, versions)
                      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)''', (ip_address, mac_address, manufacturer, device_type, os, ports, protocols, services, versions))
    
    conn.commit()
    conn.close()

def update_device_manufacturer(db_path, mac_address, manufacturer):
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    cursor.execute('''UPDATE devices SET manufacturer = ? WHERE mac_address = ?''', 
                   (manufacturer, mac_address))
    
    conn.commit()
    conn.close()

    print(f"Updated Manufacturer: {manufacturer} for MAC: {mac_address}")  # Debugging output


def get_device_type(db_path, ip_address):
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    cursor.execute('''SELECT device_type FROM devices WHERE ip_address = ?''', (ip_address,))
    result = cursor.fetchone()
    
    conn.close()
    return result[0] if result else None
